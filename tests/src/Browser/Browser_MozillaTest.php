<?php
require_once dirname(__FILE__) . '/../BaseTest.php';
require_once dirname(__FILE__) . '/../../../src/Browser/Mozilla.php';

/**
 * Test class for Browser_Mozilla.
 * Generated by PHPUnit on 2011-09-03 at 00:49:42.
 */
class Browser_MozillaTest extends BaseTest {

    /**
     * @var Browser_Mozilla
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Browser_Mozilla;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Browser_Mozilla::background_size
     * @dataProvider backgroundSizeProvider
     */
    public function testBackgroundSize($cssString, $expectedString)
    {
        $cssString = $this->object->background_size($cssString);
        $this->assertEquals($expectedString, $cssString);
    }
    
    public function backgroundSizeProvider()
    {
        $path = dirname(__FILE__) . '/../../css';
        $dh = opendir($path);

        $testCssStrings = array();
        while (false !== ($file = readdir($dh))) {
            if (!is_dir("{$path}/{$file}")) {
                $css              = file_get_contents("{$path}/{$file}");
                $shadowCss        = file_get_contents("{$path}/background-size/mozilla/{$file}");
                $testCssStrings[] = array($css, $shadowCss);
            }
        }
        closedir($dh);

        return $testCssStrings;
    }

    /**
     * @covers Browser_Mozilla::border_radius
     * @dataProvider borderRadiusProvider
     */
    public function testBorderRadius($cssString, $expectedString)
    {
        $cssString = $this->object->border_radius($cssString);
        $this->assertEquals($expectedString, $cssString);
    }
    
    public function borderRadiusProvider()
    {
        $path = dirname(__FILE__) . '/../../css';
        $dh = opendir($path);

        $testCssStrings = array();
        while (false !== ($file = readdir($dh))) {
            if (!is_dir("{$path}/{$file}")) {
                $css              = file_get_contents("{$path}/{$file}");
                $radiusCss        = file_get_contents("{$path}/border-radius/mozilla/{$file}");
                $testCssStrings[] = array($css, $radiusCss);
            }
        }
        closedir($dh);

        return $testCssStrings;
    }

    /**
     * @covers Browser_Mozilla::box_shadow
     * @dataProvider boxShadowProvider
     */
    public function testBoxShadow($cssString, $expectedString)
    {
        $cssString = $this->object->box_shadow($cssString);
        $this->assertEquals($expectedString, $cssString);
    }
    
    public function boxShadowProvider()
    {
        $path = dirname(__FILE__) . '/../../css';
        $dh = opendir($path);

        $testCssStrings = array();
        while (false !== ($file = readdir($dh))) {
            if (!is_dir("{$path}/{$file}")) {
                $css              = file_get_contents("{$path}/{$file}");
                $shadowCss        = file_get_contents("{$path}/box-shadow/mozilla/{$file}");
                $testCssStrings[] = array($css, $shadowCss);
            }
        }
        closedir($dh);

        return $testCssStrings;
    }
}